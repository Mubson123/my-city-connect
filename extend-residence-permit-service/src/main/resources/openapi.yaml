openapi: 3.1.1
info:
  title: Extend Residence Permit Service
  description: This service allows a citizen to extend his residence permit in his municipality.
  version: 1.0.0
servers:
  - url: 'http://localhost:9091/api/v2/residence-permit'

#security:
#  - bearerAuth: []

tags:
  - name: Visa Controller
    description: Visa REST Endpoints
  - name: Passport Controller
    description: Passport REST Endpoints
  - name: ResidencePermit Controller
    description: ResidencePermit REST Endpoints
  - name: IDCart Controller
    description: IdentificationCart REST Endpoints

paths:

  /visas:
    get:
      tags:
        - Visa Controller
      summary: Returns A List Of All The Visas
      description: Returns A List Of All The Visa
      operationId: getAllVisas
      responses:
        200:
          description: Successfully Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VisaResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'

    post:
      tags:
        - Visa Controller
      summary: Grant a new Visa
      description: Grant a new Visa
      operationId: createVisa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisaRequest'
        required: true
      responses:
        201:
          description: Visa successfully granted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'


  /visas/{id}:
    get:
      tags:
        - Visa Controller
      summary: Return a found Visa by ID
      description: Return a found Visa by ID
      operationId: getVisaById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        200:
          description: Successfully Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'

    put:
      tags:
        - Visa Controller
      summary: Update a given Visa
      operationId: updateVisa
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Update the Visa
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisaRequest'
        required: true
      responses:
        202:
          description: Successfully Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'

    delete:
      tags:
        - Visa Controller
      summary: Delete A Visa By ID
      description: Delete a Visa By ID
      operationId: deleteVisa
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        204:
          description: Successfully Operation
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'


  /passport:
    get:
      tags:
        - Passport Controller
      summary: Returns A List Of All The Passports
      description: Returns A List Of All The Passport
      operationId: getAllPassports
      responses:
        200:
          description: Successfully Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PassportResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'

    post:
      tags:
        - Passport Controller
      summary: Grant a new Passport
      description: Grant a new Passport
      operationId: createPassport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassportRequest'
        required: true
      responses:
        201:
          description: Passport successfully granted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PassportResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'


  /passport/{id}:
    get:
      tags:
        - Passport Controller
      summary: Return a found Passport by ID
      description: Return a found Passport by ID
      operationId: getPassportById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        200:
          description: Successfully Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PassportResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'

    put:
      tags:
        - Passport Controller
      summary: Update a given Passport
      operationId: updatePassport
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Update the Passport
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassportRequest'
        required: true
      responses:
        202:
          description: Successfully Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PassportResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'

    delete:
      tags:
        - Passport Controller
      summary: Delete A Passport By ID
      description: Delete a Passport By ID
      operationId: deletePassport
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        204:
          description: Successfully Operation
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'


  /residence-permit:
    get:
      tags:
        - ResidencePermit Controller
      summary: Returns A List Of All Permits of residence
      description: Returns A List Of All Permits of residence
      operationId: getAllResidencePermits
      responses:
        200:
          description: Successfully Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResidencePermitResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'

    post:
      tags:
        - ResidencePermit Controller
      summary: Grant a new Residence Permit
      description: Grant a new Residence Permit
      operationId: createResidencePermit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResidencePermitRequest'
        required: true
      responses:
        201:
          description: Residence Permit successfully granted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResidencePermitResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'



  /residence-permit/{id}:
    get:
      tags:
        - ResidencePermit Controller
      summary: Return a found Residence Permit by ID
      description: Return a found Residence Permit by ID
      operationId: getResidencePermitById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        200:
          description: Successfully Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResidencePermitResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'

    put:
      tags:
        - ResidencePermit Controller
      summary: Update a given Residence Permit
      operationId: updateResidencePermit
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Update the Residence Permit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResidencePermitRequest'
        required: true
      responses:
        202:
          description: Successfully Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResidencePermitResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'


    delete:
      tags:
        - ResidencePermit Controller
      summary: Delete A Residence Permit By ID
      description: Delete a Residence Permit By ID
      operationId: deleteResidencePermit
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        204:
          description: Successfully Operation
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'



  /id-cart:
    get:
      tags:
        - IDCart Controller
      summary: Returns A List Of All The ID Carts of residence
      description: Returns A List Of All The ID Carts of residence
      operationId: getAllIDCarts
      responses:
        200:
          description: Successfully Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IDCartResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'


    post:
      tags:
        - IDCart Controller
      summary: Grant a new ID Cart
      description: Grant a new ID Cart
      operationId: createIDCart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IDCartRequest'
        required: true
      responses:
        201:
          description: ID Cart successfully granted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IDCartResponse'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'



  /id-cart/{id}:

    get:
      tags:
        - IDCart Controller
      summary: Return a found ID Cart by ID
      description: Return a found ID Cart by ID
      operationId: getIDCartById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        200:
          description: Successfully Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IDCartResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'


    put:
      tags:
        - IDCart Controller
      summary: Update a given ID Cart
      operationId: updateIDCart
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: Update the ID Cart
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IDCartRequest'
        required: true
      responses:
        202:
          description: Successfully Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IDCartResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'


    delete:
      tags:
        - IDCart Controller
      summary: Delete A ID Cart By ID
      description: Delete a ID Cart By ID
      operationId: deleteIDCart
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        204:
          description: Successfully Operation
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Default'


components:
#  securitySchemes:
#    bearerAuth:
#      type: http
#      scheme: bearer
#      bearerFormat: JWT


  schemas:
    IDCartRequest:
      description: ID Cart Request
      type: object
      required:
        - iDCartNumber
        - issuedAt
        - expiresAt
        - gender
        - firstname
        - lastname
        - birthdate
        - birthplace
        - nationality
        - address
      properties:
        iDCartNumber:
          type: string
          example: 1234567890
        issuedAt:
          type: string
          format: date
          example: 2024-06-17
        expiresAt:
          type: string
          format: date
          example: 2025-10-08
        gender:
          $ref: '#/components/schemas/Gender'
        firstname:
          type: string
          example: John
        lastname:
          type: string
          example: Bauer
        birthdate:
          type: string
          format: date
          example: 1945-01-01
        birthplace:
          type: string
          example: Nuremberg
        nationality:
          type: string
          example: French
        address:
          $ref: '#/components/schemas/Address'


    IDCartResponse:
      description: ID Cart Response
      type: object
      required:
        - id
        - createdAt
        - updatedAt
        - idCartNumber
        - issuedAt
        - expiresAt
        - gender
        - firstname
        - lastname
        - birthdate
        - birthplace
        - nationality
        - address
      properties:
        id:
          type: string
          format: uuid
          example: 188b1190-e106-4687-8b11-90e106768749
        createdAt:
          type: string
          format: date-time
          example: 2024-06-17T25:10:56.946Z
        updatedAt:
          type: string
          format: date-time
          example: 2025-10-08T11:06:49.359Z
        iDCartNumber:
          type: string
          example: 1234567890
        issuedAt:
          type: string
          format: date
          example: 2024-06-17
        expiresAt:
          type: string
          format: date
          example: 2025-10-08
        gender:
          $ref: '#/components/schemas/Gender'
        firstname:
          type: string
          example: John
        lastname:
          type: string
          example: Bauer
        birthdate:
          type: string
          format: date
          example: 1945-01-01
        birthplace:
          type: string
          example: Nuremberg
        nationality:
          type: string
          example: French
        address:
          $ref: '#/components/schemas/Address'


    ResidencePermitRequest:
      description: Residence Permit Request
      type: object
      required:
        - issuedAt
        - expiresAt
      properties:
        issuedAt:
          type: string
          format: date
          example: 2024-06-17
        expiresAt:
          type: string
        visaId:
          type: string
          format: uuid
          example: 188b1190-e106-4687-8b11-90e106768249
        passportId:
          type: string
          format: uuid
          example: 188b1190-e106-4687-8b11-90e906768749
        iDCartId:
          type: string
          format: uuid
          example: 188b8190-e106-4687-8b11-90e106768749


    ResidencePermitResponse:
      description: Residence Permit Response
      type: object
      required:
        - id
        - createdAt
        - updatedAt
        - issuedAt
        - expiresAt
      properties:
        id:
          type: string
          format: uuid
          example: 188b1190-e106-4687-8z11-90e106768749
        createdAt:
          type: string
          format: date-time
          example: 2024-06-17T25:10:56.946Z
        updatedAt:
          type: string
        issuedAt:
          type: string
          format: date
          example: 2024-06-17
        expiresAt:
          type: string
          format: date
          example: 2025-10-08
        visaId:
          type: string
          format: uuid
          example: 188b1190-e106-4687-8b11-90e166768749
        passportId:
          type: string
          format: uuid
          example: 188b1190-e106-4687-8b11-20e106768749
        iDCartId:
          type: string
          format: uuid
          example: 188b1590-e106-4687-8b11-90e106768749

    PassportRequest:
      description: Passport Request
      type: object
      required:
        - passportNumber
        - passportType
        - issuedAt
        - expiresAt
        - gender
        - firstname
        - lastname
        - birthdate
        - birthplace
      properties:
        passportNumber:
          type: string
          example: 1234567890
        passportType:
          $ref: '#/components/schemas/PassportType'
        issuedAt:
          type: string
          format: date
          example: 2024-06-17
        expiresAt:
          type: string
          format: date
          example: 2025-10-08
        gender:
          $ref: '#/components/schemas/Gender'
        firstname:
          type: string
          example: John
        lastname:
          type: string
          example: Bauer
        birthdate:
          type: string
          format: date
          example: 1945-01-01
        birthplace:
          type: string
          example: Nuremberg
        address:
          $ref: '#/components/schemas/Address'

    PassportResponse:
      description: Passport Response
      type: object
      required:
        - id
        - createdAt
        - updatedAt
        - passportNumber
        - passportType
        - issuedAt
        - expiresAt
        - gender
        - firstname
        - lastname
        - birthdate
        - birthplace
        - address
      properties:
        id:
          type: string
          format: uuid
          example: 188b1190-e106-4687-8b11-90e106768749
        createdAt:
          type: string
          format: date-time
          example: 2024-06-17T25:10:56.946Z
        updatedAt:
          type: string
          format: date-time
          example: 2025-10-08T11:06:49.359Z
        passportNumber:
          type: string
          example: 1234567890
        passportType:
          $ref: '#/components/schemas/PassportType'
        issuedAt:
          type: string
          format: date
          example: 2024-06-17
        expiresAt:
          type: string
          format: date
          example: 2025-10-08
        gender:
          $ref: '#/components/schemas/Gender'
        firstname:
          type: string
          example: John
        lastname:
          type: string
          example: Bauer
        birthdate:
          type: string
          format: date
          example: 1945-01-01
        birthplace:
          type: string
          example: Nuremberg
        address:
          $ref: '#/components/schemas/Address'

    VisaRequest:
      description: Visa Request
      type: object
      required:
        - visaNumber
        - issuedAt
        - expiresAt
        - visaType
        - countryOfIssue
      properties:
        visaNumber:
          type: string
          example: 1234567890
        issuedAt:
          type: string
          format: date
          example: 2024-06-17
        expiresAt:
          type: string
          format: date
          example: 2025-10-08
        visaType:
          $ref: '#/components/schemas/VisaType'
        countryOfIssue:
          type: string
          example: France

    VisaResponse:
      description: Visa Response
      type: object
      required:
        - id
        - createdAt
        - updatedAt
        - visaNumber
        - issuedAt
        - expiresAt
        - visaType
        - countryOfIssue
      properties:
        id:
          type: string
          format: uuid
          example: 188b1190-e106-4687-8b11-90e106768749
        createdAt:
          type: string
          format: date-time
          example: 2024-06-17T25:10:56.946Z
        updatedAt:
          type: string
          format: date-time
          example: 2025-10-08T11:06:49.359Z
        visaNumber:
          type: string
          example: 1234567890
        issuedAt:
          type: string
          format: date
          example: 2024-06-17
        expiresAt:
          type: string
          format: date
          example: 2025-10-08
        visaType:
          $ref: '#/components/schemas/VisaType'
        countryOfIssue:
          type: string
          example: France

    Address:
      type: object
      description: Address
      required:
        - street
        - zip
        - city
        - country
      properties:
        street:
          type: string
          example: 32 Avenue Charle-de-Gaule
        zip:
          type: string
          example: 17500
        city:
          type: string
          example: Paris
        country:
          type: string
          example: France

    Gender:
      type: string
      description: Citizen Gender
      example: MALE
      enum:
        - MALE
        - FEMALE
        - OTHER
        - UNKNOWN

    PassportType:
      type: string
      description: Citizen Passport type
      example: NORMAL
      enum:
        - NORMAL
        - DIPLOMATIC
        - MISSION
        - SERVICE

    VisaType:
      type: string
      description: Citizen visa type
      example: TOURISM
      enum:
        - STUDY
        - TOURISM
        - MISSION
        - VISIT
        - PERMANENT
        - PATIENCE

    Error:
      type: object
      description: Error Response
      required:
        - timestamp
        - status
        - error
        - message
        - path
        - fieldErrors
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
          format: int32
        error:
          type: string
        path:
          type: string
        fieldErrors:
          type: object
          additionalProperties:
            type: string

  parameters:
    id:
      name: id
      in: path
      description: ID of a registered Citizen
      required: true
      schema:
        type: string
        format: uuid

  responses:
    Unauthorized:
      description: Access token is missing or unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Citizen Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Default:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'